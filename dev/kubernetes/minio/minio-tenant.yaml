## Secret with default environment variable configurations to be used by MinIO Tenant.
## Not recommended for production deployments! Create the secret manually instead.
secrets:
  name: minio1-env-configuration
  # MinIO root user and password
  accessKey: minio
  secretKey: minio123

## MinIO Tenant Definition
tenant:
  # Tenant name
  name: mlflow
  ## Registry location and Tag to download MinIO Server image
  image:
    repository: quay.io/minio/minio
    tag: RELEASE.2022-05-26T05-48-41Z
    pullPolicy: IfNotPresent
  ## Secret name that contains additional environment variable configurations.
  ## The secret is expected to have a key named config.env containing environment variables exports.
  configuration:
    name: minio1-env-configuration
  ## Specification for MinIO Pool(s) in this Tenant.
  pools:
    ## Servers specifies the number of MinIO Tenant Pods / Servers in this pool.
    ## For standalone mode, supply 1. For distributed mode, supply 4 or more.
    ## Note that the operator does not support upgrading from standalone to distributed mode.
    - servers: 1
      ## custom name for the pool
      name: pool-0
      ## volumesPerServer specifies the number of volumes attached per MinIO Tenant Pod / Server.
      volumesPerServer: 1
      ## size specifies the capacity per volume
      size: 5Gi
      ## storageClass specifies the storage class name to be used for this pool
      storageClassName: microk8s-hostpath

  # pool metrics to be read by Prometheus
  metrics:
    enabled: false

  ## List of bucket names to create during tenant provisioning
  buckets:
    - name: mlflow
  ## List of secret names to use for generating MinIO users during tenant provisioning
  users: [ ]
  # Tenant scrape configuration will be added to prometheus managed by the prometheus-operator.
  logging:
    anonymous: false
    json: false
    quiet: false

  ## Prometheus setup for MinIO Tenant.
  prometheus:
    diskCapacityGB: false

  ## LogSearch API setup for MinIO Tenant.
  log:
    audit:
      diskCapacityGB: false


ingress:
  api:
    enabled: false
    ingressClassName: ""
    labels: { }
    annotations: { }
    tls: [ ]
    host: minio.local
    path: /
    pathType: Prefix
  console:
    enabled: false
    ingressClassName: ""
    labels: { }
    annotations: { }
    tls: [ ]
    host: minio-console.local
    path: /
    pathType: Prefix
